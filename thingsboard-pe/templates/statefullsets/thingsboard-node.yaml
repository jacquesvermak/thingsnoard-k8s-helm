{{- if .Values.thingsboard.node.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-node
  namespace: {{ include "thingsboard-pe.namespace" . }}
  labels:
    {{- include "thingsboard-pe.labels" . | nindent 4 }}
    app.kubernetes.io/component: node
spec:
  replicas: {{ .Values.thingsboard.node.replicas }}
  serviceName: {{ include "thingsboard-pe.fullname" . }}-node
  selector:
    matchLabels:
      {{- include "thingsboard-pe.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: node
  template:
    metadata:
      labels:
        {{- include "thingsboard-pe.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: node
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
      - name: thingsboard-node
        image: "{{ .Values.thingsboard.image.registry }}:{{ .Values.thingsboard.image.tag }}"
        imagePullPolicy: {{ .Values.thingsboard.image.pullPolicy }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: rpc
          protocol: TCP
        env:
        - name: TB_SERVICE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TB_LICENSE_SECRET
          value: {{ .Values.thingsboard.node.env.TB_LICENSE_SECRET | quote }}
        - name: TB_LICENSE_VALIDATION_ENABLED
          value: {{ .Values.thingsboard.node.env.TB_LICENSE_VALIDATION_ENABLED | quote }}
        - name: SWAGGER_ENABLED
          value: {{ .Values.thingsboard.node.env.SWAGGER_ENABLED | quote }}
        - name: TB_KAFKA_SERVERS
          value: {{ .Values.thingsboard.node.env.TB_KAFKA_SERVERS | quote }}
        {{- if .Values.thingsboard.node.dtls.enabled }}
        - name: COAP_DTLS_ENABLED
          value: "true"
        - name: COAP_DTLS_CREDENTIALS_TYPE
          value: PEM
        - name: COAP_DTLS_PEM_CERT
          value: /https-config/server.pem
        - name: COAP_DTLS_PEM_KEY
          value: /https-config/server_key.pem
        - name: COAP_DTLS_BIND_PORT
          value: {{ .Values.thingsboard.transports.coap.port | quote }}
        - name: COAP_DTLS_BIND_ADDRESS
          value: "0.0.0.0"
        {{- end }}
        - name: COAP_TRANSPORT_HOST
          value: {{ printf "%s-coap.%s.svc.cluster.local" (include "thingsboard-pe.fullname" .) (include "thingsboard-pe.namespace" .) }}
        envFrom:
        - configMapRef:
            name: thingsboard-node-db-config
        resources:
          {{- toYaml .Values.thingsboard.node.resources | nindent 10 }}
        volumeMounts:
        - name: thingsboard-node-data
          mountPath: /data
        - name: thingsboard-node-config
          mountPath: /config
        - name: thingsboard-node-logs
          mountPath: /var/log/thingsboard
        - name: gc-logs
          mountPath: /var/log/tb
        {{- if .Values.thingsboard.node.dtls.enabled }}
        - name: coap-pem-configmap
          mountPath: /https-config
        {{- end }}
        livenessProbe:
          httpGet:
            path: /login
            port: http
          initialDelaySeconds: 360
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /login
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
      volumes:
      - name: thingsboard-node-config
        configMap:
          name: thingsboard-node-config
          items:
          - key: conf
            path: thingsboard.conf
          - key: logback
            path: logback.xml
      - name: thingsboard-node-logs
        emptyDir: {}
      - name: gc-logs
        emptyDir: {}
      {{- if .Values.thingsboard.node.dtls.enabled }}
      - name: coap-pem-configmap
        configMap:
          name: {{ .Values.thingsboard.node.dtls.certificatesConfigMap }}
          defaultMode: 444
          items:
          - key: server.pem
            path: server.pem
          - key: server_key.pem
            path: server_key.pem
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: thingsboard-node-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
  updateStrategy:
    type: RollingUpdate
{{- end }}
