{{- if .Values.kafka.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "thingsboard-pe.labels" . | nindent 4 }}
    app.kubernetes.io/component: kafka
spec:
  serviceName: {{ include "thingsboard-pe.fullname" . }}-kafka
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      {{- include "thingsboard-pe.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: kafka
  template:
    metadata:
      labels:
        {{- include "thingsboard-pe.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: kafka
    spec:
      containers:
      - name: kafka
        image: "{{ .Values.kafka.image.registry }}:{{ .Values.kafka.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 9093
          name: kafka-internal
        env:
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: "{{ .Values.kafka.zookeeper.servers }}"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:9093"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(MY_POD_NAME).{{ include "thingsboard-pe.fullname" . }}-kafka:9092,PLAINTEXT_INTERNAL://$(MY_POD_NAME).{{ include "thingsboard-pe.fullname" . }}-kafka:9093"
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT_INTERNAL"
        - name: KAFKA_CFG_LOG_RETENTION_HOURS
          value: "168"
        - name: KAFKA_CFG_LOG_SEGMENT_BYTES
          value: "1073741824"
        - name: KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS
          value: "300000"
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: "3"
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_HEAP_OPTS
          value: "-Xmx4G -Xms4G"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: kafka-storage
          mountPath: /bitnami/kafka
        - name: kafka-config
          mountPath: /opt/bitnami/kafka/config/server.properties
          subPath: server.properties
        - name: kafka-scripts
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          {{- toYaml .Values.kafka.resources | nindent 10 }}
      volumes:
      - name: kafka-config
        configMap:
          name: {{ include "thingsboard-pe.fullname" . }}-kafka-config
      - name: kafka-scripts
        configMap:
          name: {{ include "thingsboard-pe.fullname" . }}-kafka-scripts
          defaultMode: 0755
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.kafka.storage.storageClass }}
      storageClassName: "{{ .Values.kafka.storage.storageClass }}"
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.kafka.storage.size }}
{{- end }}