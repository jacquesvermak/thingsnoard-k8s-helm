{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-redis-master
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "thingsboard-pe.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis-master
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "thingsboard-pe.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis-master
  template:
    metadata:
      labels:
        {{- include "thingsboard-pe.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis-master
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.image.registry }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
        env:
        {{- if .Values.redis.auth.enabled }}
        - name: REDIS_PASSWORD
          value: "{{ .Values.redis.auth.password }}"
        {{- else }}
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        {{- end }}
        - name: REDIS_DISABLE_COMMANDS
          value: "FLUSHDB,FLUSHALL"
        volumeMounts:
        - name: redis-storage
          mountPath: /bitnami/redis/data
        - name: redis-config
          mountPath: /opt/bitnami/redis/mounted-etc
          readOnly: true
        - name: redis-health
          mountPath: /health
          readOnly: true
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          {{- toYaml .Values.redis.master.resources | nindent 10 }}
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: {{ include "thingsboard-pe.fullname" . }}-redis-storage
      - name: redis-config
        configMap:
          name: {{ include "thingsboard-pe.fullname" . }}-redis-configuration
      - name: redis-health
        configMap:
          name: {{ include "thingsboard-pe.fullname" . }}-redis-health
          defaultMode: 0755
      restartPolicy: Always
{{- end }}