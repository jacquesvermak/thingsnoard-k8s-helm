# Global configuration
global:
  namespace: thingsboard-qa
  imageRegistry: ""
  imagePullSecrets: []

# ThingsBoard configuration
thingsboard:
  image:
    registry: docker.io/thingsboard/tb-pe-node
    tag: "4.0.1PE"
    pullPolicy: IfNotPresent
  
  # Core service configuration
  node:
    enabled: true
    replicas: 1
    resources:
      limits:
        cpu: "12"
        memory: 25Gi
      requests:
        cpu: "6"
        memory: 20Gi
    
    # DTLS Configuration
    dtls:
      enabled: true
      certificatesConfigMap: coap-pem-configmap
      
    # Environment variables
    env:
      TB_LICENSE_SECRET: "biGeBHrEO4LaxCqPQa9imyFL"
      TB_LICENSE_VALIDATION_ENABLED: "false"
      SWAGGER_ENABLED: "true"
      TB_KAFKA_SERVERS: "thingsboard-kafka:9092"
      
  # Transport services
  transports:
    coap:
      enabled: true
      replicas: 4
      image:
        registry: docker.io/thingsboard/tb-pe-coap-transport
        tag: "4.0.1PE"
      port: 5684
      dtlsEnabled: true
      service:
        type: LoadBalancer
        annotations:
          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      resources:
        limits:
          cpu: 410m
          memory: 8Gi
        requests:
          cpu: 410m
          memory: 8Gi
      env:
        TB_KAFKA_SERVERS: "thingsboard-kafka:9092"
        COAP_TIMEOUT: "60000"
        TB_QUEUE_REQUEST_TIMEOUT: "120000"
    
    http:
      enabled: true
      replicas: 1
      image:
        registry: docker.io/thingsboard/tb-pe-http-transport
        tag: "4.0.1PE"
      port: 8080
      service:
        type: LoadBalancer
        annotations:
          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      resources:
        limits:
          cpu: 500m
          memory: 4Gi
        requests:
          cpu: 500m
          memory: 4Gi

  # Web UI
  webui:
    enabled: true
    replicas: 1
    image:
      registry: docker.io/thingsboard/tb-pe-web-ui
      tag: "4.0.1PE"
    service:
      type: LoadBalancer
      port: 8080
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 2Gi

  # JS Executor
  jsExecutor:
    enabled: true
    replicas: 1
    image:
      registry: docker.io/thingsboard/tb-pe-js-executor
      tag: "4.0.1PE"
    resources:
      limits:
        cpu: 1000m
        memory: 4Gi
      requests:
        cpu: 1000m
        memory: 4Gi

# Database configuration
cassandra:
  enabled: true
  image:
    registry: docker.io/bitnami/cassandra
    tag: "4.0.11-debian-11-r10"
  cluster:
    name: cassandra
    datacenter: dc1
    rack: rack1
    seeds: "thingsboard-cassandra-0.thingsboard-cassandra-headless"
  resources:
    limits:
      memory: 32Gi
    requests:
      memory: 30Gi
  storage:
    size: 100Gi
    storageClass: ""

# Message queue configuration
kafka:
  enabled: true
  image:
    registry: docker.io/bitnami/kafka
    tag: "3.5.1-debian-11-r10"
  replicas: 3
  resources:
    limits:
      cpu: 2000m
      memory: 8Gi
    requests:
      cpu: 1000m
      memory: 4Gi
  storage:
    size: 50Gi
    storageClass: ""
  zookeeper:
    servers: "thingsboard-zookeeper:2181"

# Cache configuration
redis:
  enabled: true
  image:
    registry: docker.io/bitnami/redis
    tag: "7.2.1-debian-11-r12"
  auth:
    enabled: true
    password: "setplease"
  master:
    resources:
      limits:
        cpu: 1000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 2Gi
  storage:
    size: 20Gi
    storageClass: ""

# Zookeeper configuration
zookeeper:
  enabled: true
  image:
    registry: docker.io/bitnami/zookeeper
    tag: "3.9.0-debian-11-r18"
  replicas: 3
  resources:
    limits:
      cpu: 1000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 2Gi
  storage:
    size: 20Gi
    storageClass: ""

# Security
security:
  certificates:
    enabled: true
    dtls:
      serverCert: |
        -----BEGIN CERTIFICATE-----
        MIIBdTCCAZsCFENbCvDkHJ//r9nuIDynYYlYpAzzMAoGCCqGSM49BAMCMH0xCzAJ
        BgNVBAYTAlpBMRUwEwYDVQQIDAxXZXN0ZXJuIENhcGUxEjAQBgNVBAcMCUNhcGUg
        VG93bjESMBAGA1UECgwJU3RhZ2VaZXJvMQ0wCwYDVQQLDARDb0FQMSAwHgYDVQQD
        DBdjb2FwLnFhLnN0YWdlemVyby5jby56YTAeFw0yNDExMTIwNjA0MjBaFw0yNTEx
        MTIwNjA0MjBaMH0xCzAJBgNVBAYTAlpBMRUwEwYDVQQIDAxXZXN0ZXJuIENhcGUx
        EjAQBgNVBAcMCUNhcGUgVG93bjESMBAGA1UECgwJU3RhZ2VaZXJvMQ0wCwYDVQQL
        DARDb0FQMSAwHgYDVQQDDBdjb2FwLnFhLnN0YWdlemVyby5jby56YTBZMBMGByqG
        SM49AgEGCCqGSM49AwEHA0IABMdgAHc1Y4LoOPZ5x0eiypYx2veZaKpQKq7djXt6
        rZOUD7u35YMTkDtJ/7Obq+TxQR5c52Elj65u+zW0yrANU80wCgYIKoZIzj0EAwID
        SAAwRQIhAO3qH7xjVewGUmqpJCQdLOv4XVPqiBtlJ69hzP/BXOz9AiAxJG1wPKkw
        P5cjGDZCEOJZ1cX3myRk6SdB3Qwjm7MxHA==
        -----END CERTIFICATE-----
      serverKey: |
        -----BEGIN EC PARAMETERS-----
        BggqhkjOPQMBBw==
        -----END EC PARAMETERS-----
        -----BEGIN EC PRIVATE KEY-----
        MHcCAQEEINj2OLQ2wOSSELhxVe8M+/28oA6pGa/nBGoERspT8dU1oAoGCCqGSM49
        AwEHoUQDQgAEx2AAdzVjgug49nnHR6LKljHa95loqlAqrt2Ne3qtk5QPu7flgxOQ
        O0n/s5ur5PFBHlznYSWPrm77NbTKsA1TzQ==
        -----END EC PRIVATE KEY-----

# Horizontal Pod Autoscaling
autoscaling:
  enabled: true
  coap:
    minReplicas: 4
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  http:
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
